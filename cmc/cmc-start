#!/bin/bash

NAME=cmc

export KATCP_LABEL=${NAME}-start

CONFIGVAR=${NAME^^*}_CONFIG

if [ -z "${!CONFIGVAR}" ] ; then
  export ${CONFIGVAR}=/etc/${NAME}.conf
fi

if [ -f "${!CONFIGVAR}" ] ; then
  source ${!CONFIGVAR}
else
  kcpmsg -l error "unable to locate config file ${!CONFIGVAR}"
  exit 2
fi

if [ "${state}" = "production" ] ; then
  export PATH=/usr/local/bin:/usr/local/sbin:/bin:/usr/bin/
  LOGFLAGS="-a 10"
  LOGFILE=/var/log/${NAME}.kcplog
  ERRFILE=/var/log/${NAME}.debug
  cd /var/log
else 
  set -x
  export PATH=.:${NAME}:/usr/local/bin:/usr/local/sbin:/bin:/usr/bin/
  #LOGFLAGS="-t -l trace"
  LOGFLAGS="-t"
  LOGFILE=/tmp/${NAME}.kcplog
  ERRFILE=/tmp/${NAME}.debug
  cd /tmp
fi

export KATCP_SERVER=localhost:${old_port}

if kcpcmd -t 2 watchdog >& /dev/null ; then
  if [ "${state}" = "production" ] ; then
    kcpmsg -l error "${NAME} already running"
    exit 2
  else
    kcpmsg -l warn "${NAME} already running"
  fi 
else 
  sleep 0.5

  if [ "$(whoami)" = "root" ] ; then
    touch ${ERRFILE}
    chown ${unprivileged_user:-nobody} ${ERRFILE}
    su ${unprivileged_user:-nobody} -c "env PATH=$PATH:/usr/local/sbin kcs -d -p ${KATCP_SERVER} -l ${ERRFILE}"
  else 
    kcs -d -p ${KATCP_SERVER} -l ${ERRFILE}
  fi 

  sleep 0.5
fi

# this is to deal with old katcp logic, new one should be different 
kcpcmd listener-create setup ${setup_port} 127.0.0.1 
export KATCP_SERVER=localhost:${setup_port}

# top-level katcp interface
kcpcmd group-create primary 
kcpcmd listener-create primary ${primary_port} ${bind_interface:-0.0.0.0} primary
export KATCP_SERVER=${bind_interface:-localhost}:${primary_port}

# configure top-level/primary group
kcpcmd scope global group primary

# logging can now be started 
kcplog ${LOGFLAGS} -d -o ${LOGFILE}

kcpcmd client-exec primary primary ${NAME}-primary
kcpcmd client-exec corr primary ${NAME}-null

function kfwd()
{
  kcpcmd forward-symbolic $1 $2
  kcpcmd cmd-help $1 "$3"
}

kfwd resource-mark primary "set availability of a processing resource (?resource-mark resource marking)"
kfwd resource-list primary "show processing resources (?resource-list [resource])"
kfwd array-halt    primary "halt a subarray (?array-halt [subarray])"
kfwd array-list    primary "show subarrays (?array-list)"
kfwd array-assign  primary "define and launch a subarray (?array-assign subarray [inputs]*)"

kcpcmd var-declare 'katcp-device*' map,version
kcpcmd var-set katcp-device ${device_api:-unknown} string :version
kcpcmd var-set katcp-device ${device_build:-unknown} string :build

kcpcmd var-declare "*device-status*" sensor,map
kcpcmd var-set "*device-status*" ok string :value
kcpcmd var-set "*device-status*" "correlator master controller health" string :help
kcpcmd var-set "*device-status*" nominal string :status
kcpcmd var-set "*device-status*" discrete string :type

kcpcmd var-set "*device-status*" ok       string ":range#0"
kcpcmd var-set "*device-status*" degraded string ":range#1"
kcpcmd var-set "*device-status*" fail     string ":range#2"

# switch back to default/setup, this will be used to clone subordinates
export KATCP_SERVER=localhost:${setup_port}

kfwd instrument-list  primary "show fielded instruments (?instrument-list)"
kfwd instrument-probe primary "check resources for an instrument (?instrument-probe instrument)"

kcpcmd forward-symbolic instrument-activate primary instrument-activate %g %1+
kcpcmd cmd-help instrument-activate "launch the specified instrument (?instrument-activate instrument)"

# might have to glue all corr-* capture-list output together 
kfwd capture-list        corr "list data products"
kfwd capture-destination corr "set data stream destination (?capture-destination stream data-destination)"
kfwd capture-start       corr "start data stream output (?capture-start stream)"
kfwd capture-stop        corr "stop data stream output (?capture-stop stream)"
kfwd capture-meta        corr "reissue stream meta-data (?capture-meta stream)"

kfwd input-labels        corr "set names of all inputs (?label inputs [name]*)"
kfwd gain                corr "set gain factors (?gain input [values])"
kfwd delays              corr "set delay and fringe correction (?delays time [coefficient-set]*)"
kfwd frequency-select    corr "set the center of the frequency band (?frequency-select stream centerfrequency)"
kfwd accumulation-length corr "set the integration interval (?accumulation length period)"

kfwd beam-weights        corr "future beamformer command"
kfwd beam-passband       corr "future beamformer command"

kfwd quantiser-snapshot  corr "retrieve quantiser data"
kfwd fft-shift           corr "set the FFT shift value (?fft-shift [value])"

kfwd digitiser-synch-epoch corr "internal synchronisation interface"
